name: Build and Push Production Docker Images

on:
  workflow_dispatch:
    inputs:
      versionType:
        type: choice
        description: Select the version to bump (default is 'patch')
        options:
          - major
          - minor
          - patch

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: 'main'

      # Bump Version in package.json and tag commit with new version
      - name: 'Automated Version Bump'
        uses: 'sherifalaa55/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version-type: ${{ github.event.inputs.versionType }}

      - name: Echo version
        run: |
          echo "Version: ${{ github.event.inputs.versionType }}"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Auth service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/auth/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/auth:${{ github.event.inputs.versionType }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/auth:latest

      - name: Build and push Reservation service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/reservation/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/reservation:${{ github.event.inputs.versionType }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/reservation:latest

      - name: Build and push Payment service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/payment/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/payment:${{ github.event.inputs.versionType }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/payment:latest

      - name: Build and push Notifications service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/notifications/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/notifications:${{ github.event.inputs.versionType }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/notifications:latest

      - name: Create Release Summary
        if: github.event_name == 'release'
        run: |
          echo "## Docker Images" >> $GITHUB_STEP_SUMMARY
          echo "The following images have been built and pushed:" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/auth:${{ github.event.inputs.versionType }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/reservation:${{ github.event.inputs.versionType }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/payment:${{github.event.inputs.versionType }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/notifications:${{ github.event.inputs.versionType }}\`" >> $GITHUB_STEP_SUMMARY

  deploy-uat:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Mock deployment
        run: |
          echo "Mocking deployment of Auth Service..."
          echo "Mocking deployment of Reservation Service..."
          echo "Mocking deployment of Payment Service..."
          echo "Mocking deployment of Notifications Service..."

      - name: Mock deployment verification
        run: |
          echo "Mock Deployment Status:"
          echo "auth-deployment          1/1     Running   0          1m"
          echo "reservation-deployment   1/1     Running   0          1m"
          echo "payment-deployment       1/1     Running   0          1m"
          echo "notifications-deployment 1/1     Running   0          1m"
